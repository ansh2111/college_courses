(defun intersect (a b)
	(defvar c (list))
	(dolist (a1 a)
	(dolist (b1 b)
		(if (= b1 a1)
		(push b1 c)
		)
	)
	)
	(return-from intersect c)
)
(defun union1 (a b)

	(defvar d (list))
	(dolist (b1 b)
	(if (member b1 d) () (push b1 d))		
	)
	(dolist (a1 a)
	(if (member a1 d) () (push a1 d))	
	)
	(return-from union1 d)
)
(defun diff (a b)
	(defvar c (intersect a b))
	(defvar d1 (list))
	(dolist (a1 a)
	(if (member a1 c) () (push a1 d1))	
	)
	(return-from diff d1)
)

(defvar x (list 1 2 3 4 5 7 9))
(defvar y (list 3 7 8 6 2))
(print "list:X" )
(print x)
(print "list:Y" )
(print y)
(print "Union X Y:" )
(print (union1 x y))
(print "Intersection X Y:" )
(print (intersect x y))
(print "Difference X-Y: " )
(print (diff x y))

